//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Account) DeepCopyInto(out *Account) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Account.
func (in *Account) DeepCopy() *Account {
	if in == nil {
		return nil
	}
	out := new(Account)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Account) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountList) DeepCopyInto(out *AccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Account, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountList.
func (in *AccountList) DeepCopy() *AccountList {
	if in == nil {
		return nil
	}
	out := new(AccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountObservation) DeepCopyInto(out *AccountObservation) {
	*out = *in
	if in.AccessTier != nil {
		in, out := &in.AccessTier, &out.AccessTier
		*out = new(string)
		**out = **in
	}
	if in.AccountKind != nil {
		in, out := &in.AccountKind, &out.AccountKind
		*out = new(string)
		**out = **in
	}
	if in.AccountReplicationType != nil {
		in, out := &in.AccountReplicationType, &out.AccountReplicationType
		*out = new(string)
		**out = **in
	}
	if in.AccountTier != nil {
		in, out := &in.AccountTier, &out.AccountTier
		*out = new(string)
		**out = **in
	}
	if in.AllowNestedItemsToBePublic != nil {
		in, out := &in.AllowNestedItemsToBePublic, &out.AllowNestedItemsToBePublic
		*out = new(bool)
		**out = **in
	}
	if in.AllowedCopyScope != nil {
		in, out := &in.AllowedCopyScope, &out.AllowedCopyScope
		*out = new(string)
		**out = **in
	}
	if in.AzureFilesAuthentication != nil {
		in, out := &in.AzureFilesAuthentication, &out.AzureFilesAuthentication
		*out = make([]AzureFilesAuthenticationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlobProperties != nil {
		in, out := &in.BlobProperties, &out.BlobProperties
		*out = make([]BlobPropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CrossTenantReplicationEnabled != nil {
		in, out := &in.CrossTenantReplicationEnabled, &out.CrossTenantReplicationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomDomain != nil {
		in, out := &in.CustomDomain, &out.CustomDomain
		*out = make([]CustomDomainObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerManagedKey != nil {
		in, out := &in.CustomerManagedKey, &out.CustomerManagedKey
		*out = make([]CustomerManagedKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultToOauthAuthentication != nil {
		in, out := &in.DefaultToOauthAuthentication, &out.DefaultToOauthAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.EdgeZone != nil {
		in, out := &in.EdgeZone, &out.EdgeZone
		*out = new(string)
		**out = **in
	}
	if in.EnableHTTPSTrafficOnly != nil {
		in, out := &in.EnableHTTPSTrafficOnly, &out.EnableHTTPSTrafficOnly
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImmutabilityPolicy != nil {
		in, out := &in.ImmutabilityPolicy, &out.ImmutabilityPolicy
		*out = make([]ImmutabilityPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InfrastructureEncryptionEnabled != nil {
		in, out := &in.InfrastructureEncryptionEnabled, &out.InfrastructureEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsHnsEnabled != nil {
		in, out := &in.IsHnsEnabled, &out.IsHnsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LargeFileShareEnabled != nil {
		in, out := &in.LargeFileShareEnabled, &out.LargeFileShareEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkRules != nil {
		in, out := &in.NetworkRules, &out.NetworkRules
		*out = make([]NetworkRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nfsv3Enabled != nil {
		in, out := &in.Nfsv3Enabled, &out.Nfsv3Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryBlobEndpoint != nil {
		in, out := &in.PrimaryBlobEndpoint, &out.PrimaryBlobEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PrimaryBlobHost != nil {
		in, out := &in.PrimaryBlobHost, &out.PrimaryBlobHost
		*out = new(string)
		**out = **in
	}
	if in.PrimaryDfsEndpoint != nil {
		in, out := &in.PrimaryDfsEndpoint, &out.PrimaryDfsEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PrimaryDfsHost != nil {
		in, out := &in.PrimaryDfsHost, &out.PrimaryDfsHost
		*out = new(string)
		**out = **in
	}
	if in.PrimaryFileEndpoint != nil {
		in, out := &in.PrimaryFileEndpoint, &out.PrimaryFileEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PrimaryFileHost != nil {
		in, out := &in.PrimaryFileHost, &out.PrimaryFileHost
		*out = new(string)
		**out = **in
	}
	if in.PrimaryLocation != nil {
		in, out := &in.PrimaryLocation, &out.PrimaryLocation
		*out = new(string)
		**out = **in
	}
	if in.PrimaryQueueEndpoint != nil {
		in, out := &in.PrimaryQueueEndpoint, &out.PrimaryQueueEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PrimaryQueueHost != nil {
		in, out := &in.PrimaryQueueHost, &out.PrimaryQueueHost
		*out = new(string)
		**out = **in
	}
	if in.PrimaryTableEndpoint != nil {
		in, out := &in.PrimaryTableEndpoint, &out.PrimaryTableEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PrimaryTableHost != nil {
		in, out := &in.PrimaryTableHost, &out.PrimaryTableHost
		*out = new(string)
		**out = **in
	}
	if in.PrimaryWebEndpoint != nil {
		in, out := &in.PrimaryWebEndpoint, &out.PrimaryWebEndpoint
		*out = new(string)
		**out = **in
	}
	if in.PrimaryWebHost != nil {
		in, out := &in.PrimaryWebHost, &out.PrimaryWebHost
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.QueueEncryptionKeyType != nil {
		in, out := &in.QueueEncryptionKeyType, &out.QueueEncryptionKeyType
		*out = new(string)
		**out = **in
	}
	if in.QueueProperties != nil {
		in, out := &in.QueueProperties, &out.QueueProperties
		*out = make([]QueuePropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = make([]RoutingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SASPolicy != nil {
		in, out := &in.SASPolicy, &out.SASPolicy
		*out = make([]SASPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SFTPEnabled != nil {
		in, out := &in.SFTPEnabled, &out.SFTPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SecondaryBlobEndpoint != nil {
		in, out := &in.SecondaryBlobEndpoint, &out.SecondaryBlobEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecondaryBlobHost != nil {
		in, out := &in.SecondaryBlobHost, &out.SecondaryBlobHost
		*out = new(string)
		**out = **in
	}
	if in.SecondaryDfsEndpoint != nil {
		in, out := &in.SecondaryDfsEndpoint, &out.SecondaryDfsEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecondaryDfsHost != nil {
		in, out := &in.SecondaryDfsHost, &out.SecondaryDfsHost
		*out = new(string)
		**out = **in
	}
	if in.SecondaryFileEndpoint != nil {
		in, out := &in.SecondaryFileEndpoint, &out.SecondaryFileEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecondaryFileHost != nil {
		in, out := &in.SecondaryFileHost, &out.SecondaryFileHost
		*out = new(string)
		**out = **in
	}
	if in.SecondaryLocation != nil {
		in, out := &in.SecondaryLocation, &out.SecondaryLocation
		*out = new(string)
		**out = **in
	}
	if in.SecondaryQueueEndpoint != nil {
		in, out := &in.SecondaryQueueEndpoint, &out.SecondaryQueueEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecondaryQueueHost != nil {
		in, out := &in.SecondaryQueueHost, &out.SecondaryQueueHost
		*out = new(string)
		**out = **in
	}
	if in.SecondaryTableEndpoint != nil {
		in, out := &in.SecondaryTableEndpoint, &out.SecondaryTableEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecondaryTableHost != nil {
		in, out := &in.SecondaryTableHost, &out.SecondaryTableHost
		*out = new(string)
		**out = **in
	}
	if in.SecondaryWebEndpoint != nil {
		in, out := &in.SecondaryWebEndpoint, &out.SecondaryWebEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SecondaryWebHost != nil {
		in, out := &in.SecondaryWebHost, &out.SecondaryWebHost
		*out = new(string)
		**out = **in
	}
	if in.ShareProperties != nil {
		in, out := &in.ShareProperties, &out.ShareProperties
		*out = make([]SharePropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedAccessKeyEnabled != nil {
		in, out := &in.SharedAccessKeyEnabled, &out.SharedAccessKeyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StaticWebsite != nil {
		in, out := &in.StaticWebsite, &out.StaticWebsite
		*out = make([]StaticWebsiteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableEncryptionKeyType != nil {
		in, out := &in.TableEncryptionKeyType, &out.TableEncryptionKeyType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountObservation.
func (in *AccountObservation) DeepCopy() *AccountObservation {
	if in == nil {
		return nil
	}
	out := new(AccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountParameters) DeepCopyInto(out *AccountParameters) {
	*out = *in
	if in.AccessTier != nil {
		in, out := &in.AccessTier, &out.AccessTier
		*out = new(string)
		**out = **in
	}
	if in.AccountKind != nil {
		in, out := &in.AccountKind, &out.AccountKind
		*out = new(string)
		**out = **in
	}
	if in.AccountReplicationType != nil {
		in, out := &in.AccountReplicationType, &out.AccountReplicationType
		*out = new(string)
		**out = **in
	}
	if in.AccountTier != nil {
		in, out := &in.AccountTier, &out.AccountTier
		*out = new(string)
		**out = **in
	}
	if in.AllowNestedItemsToBePublic != nil {
		in, out := &in.AllowNestedItemsToBePublic, &out.AllowNestedItemsToBePublic
		*out = new(bool)
		**out = **in
	}
	if in.AllowedCopyScope != nil {
		in, out := &in.AllowedCopyScope, &out.AllowedCopyScope
		*out = new(string)
		**out = **in
	}
	if in.AzureFilesAuthentication != nil {
		in, out := &in.AzureFilesAuthentication, &out.AzureFilesAuthentication
		*out = make([]AzureFilesAuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlobProperties != nil {
		in, out := &in.BlobProperties, &out.BlobProperties
		*out = make([]BlobPropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CrossTenantReplicationEnabled != nil {
		in, out := &in.CrossTenantReplicationEnabled, &out.CrossTenantReplicationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CustomDomain != nil {
		in, out := &in.CustomDomain, &out.CustomDomain
		*out = make([]CustomDomainParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerManagedKey != nil {
		in, out := &in.CustomerManagedKey, &out.CustomerManagedKey
		*out = make([]CustomerManagedKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultToOauthAuthentication != nil {
		in, out := &in.DefaultToOauthAuthentication, &out.DefaultToOauthAuthentication
		*out = new(bool)
		**out = **in
	}
	if in.EdgeZone != nil {
		in, out := &in.EdgeZone, &out.EdgeZone
		*out = new(string)
		**out = **in
	}
	if in.EnableHTTPSTrafficOnly != nil {
		in, out := &in.EnableHTTPSTrafficOnly, &out.EnableHTTPSTrafficOnly
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImmutabilityPolicy != nil {
		in, out := &in.ImmutabilityPolicy, &out.ImmutabilityPolicy
		*out = make([]ImmutabilityPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InfrastructureEncryptionEnabled != nil {
		in, out := &in.InfrastructureEncryptionEnabled, &out.InfrastructureEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsHnsEnabled != nil {
		in, out := &in.IsHnsEnabled, &out.IsHnsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LargeFileShareEnabled != nil {
		in, out := &in.LargeFileShareEnabled, &out.LargeFileShareEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.NetworkRules != nil {
		in, out := &in.NetworkRules, &out.NetworkRules
		*out = make([]NetworkRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nfsv3Enabled != nil {
		in, out := &in.Nfsv3Enabled, &out.Nfsv3Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.QueueEncryptionKeyType != nil {
		in, out := &in.QueueEncryptionKeyType, &out.QueueEncryptionKeyType
		*out = new(string)
		**out = **in
	}
	if in.QueueProperties != nil {
		in, out := &in.QueueProperties, &out.QueueProperties
		*out = make([]QueuePropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = make([]RoutingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SASPolicy != nil {
		in, out := &in.SASPolicy, &out.SASPolicy
		*out = make([]SASPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SFTPEnabled != nil {
		in, out := &in.SFTPEnabled, &out.SFTPEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ShareProperties != nil {
		in, out := &in.ShareProperties, &out.ShareProperties
		*out = make([]SharePropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedAccessKeyEnabled != nil {
		in, out := &in.SharedAccessKeyEnabled, &out.SharedAccessKeyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StaticWebsite != nil {
		in, out := &in.StaticWebsite, &out.StaticWebsite
		*out = make([]StaticWebsiteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableEncryptionKeyType != nil {
		in, out := &in.TableEncryptionKeyType, &out.TableEncryptionKeyType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountParameters.
func (in *AccountParameters) DeepCopy() *AccountParameters {
	if in == nil {
		return nil
	}
	out := new(AccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpec) DeepCopyInto(out *AccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpec.
func (in *AccountSpec) DeepCopy() *AccountSpec {
	if in == nil {
		return nil
	}
	out := new(AccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountStatus) DeepCopyInto(out *AccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountStatus.
func (in *AccountStatus) DeepCopy() *AccountStatus {
	if in == nil {
		return nil
	}
	out := new(AccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsObservation) DeepCopyInto(out *ActionsObservation) {
	*out = *in
	if in.BaseBlob != nil {
		in, out := &in.BaseBlob, &out.BaseBlob
		*out = make([]BaseBlobObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]SnapshotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsObservation.
func (in *ActionsObservation) DeepCopy() *ActionsObservation {
	if in == nil {
		return nil
	}
	out := new(ActionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionsParameters) DeepCopyInto(out *ActionsParameters) {
	*out = *in
	if in.BaseBlob != nil {
		in, out := &in.BaseBlob, &out.BaseBlob
		*out = make([]BaseBlobParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = make([]SnapshotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionsParameters.
func (in *ActionsParameters) DeepCopy() *ActionsParameters {
	if in == nil {
		return nil
	}
	out := new(ActionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryObservation) DeepCopyInto(out *ActiveDirectoryObservation) {
	*out = *in
	if in.DomainGUID != nil {
		in, out := &in.DomainGUID, &out.DomainGUID
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainSid != nil {
		in, out := &in.DomainSid, &out.DomainSid
		*out = new(string)
		**out = **in
	}
	if in.ForestName != nil {
		in, out := &in.ForestName, &out.ForestName
		*out = new(string)
		**out = **in
	}
	if in.NetbiosDomainName != nil {
		in, out := &in.NetbiosDomainName, &out.NetbiosDomainName
		*out = new(string)
		**out = **in
	}
	if in.StorageSid != nil {
		in, out := &in.StorageSid, &out.StorageSid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryObservation.
func (in *ActiveDirectoryObservation) DeepCopy() *ActiveDirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveDirectoryParameters) DeepCopyInto(out *ActiveDirectoryParameters) {
	*out = *in
	if in.DomainGUID != nil {
		in, out := &in.DomainGUID, &out.DomainGUID
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainSid != nil {
		in, out := &in.DomainSid, &out.DomainSid
		*out = new(string)
		**out = **in
	}
	if in.ForestName != nil {
		in, out := &in.ForestName, &out.ForestName
		*out = new(string)
		**out = **in
	}
	if in.NetbiosDomainName != nil {
		in, out := &in.NetbiosDomainName, &out.NetbiosDomainName
		*out = new(string)
		**out = **in
	}
	if in.StorageSid != nil {
		in, out := &in.StorageSid, &out.StorageSid
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveDirectoryParameters.
func (in *ActiveDirectoryParameters) DeepCopy() *ActiveDirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(ActiveDirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFilesAuthenticationObservation) DeepCopyInto(out *AzureFilesAuthenticationObservation) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]ActiveDirectoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DirectoryType != nil {
		in, out := &in.DirectoryType, &out.DirectoryType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFilesAuthenticationObservation.
func (in *AzureFilesAuthenticationObservation) DeepCopy() *AzureFilesAuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(AzureFilesAuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureFilesAuthenticationParameters) DeepCopyInto(out *AzureFilesAuthenticationParameters) {
	*out = *in
	if in.ActiveDirectory != nil {
		in, out := &in.ActiveDirectory, &out.ActiveDirectory
		*out = make([]ActiveDirectoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DirectoryType != nil {
		in, out := &in.DirectoryType, &out.DirectoryType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureFilesAuthenticationParameters.
func (in *AzureFilesAuthenticationParameters) DeepCopy() *AzureFilesAuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(AzureFilesAuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseBlobObservation) DeepCopyInto(out *BaseBlobObservation) {
	*out = *in
	if in.AutoTierToHotFromCoolEnabled != nil {
		in, out := &in.AutoTierToHotFromCoolEnabled, &out.AutoTierToHotFromCoolEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DeleteAfterDaysSinceCreationGreaterThan != nil {
		in, out := &in.DeleteAfterDaysSinceCreationGreaterThan, &out.DeleteAfterDaysSinceCreationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.DeleteAfterDaysSinceLastAccessTimeGreaterThan != nil {
		in, out := &in.DeleteAfterDaysSinceLastAccessTimeGreaterThan, &out.DeleteAfterDaysSinceLastAccessTimeGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.DeleteAfterDaysSinceModificationGreaterThan != nil {
		in, out := &in.DeleteAfterDaysSinceModificationGreaterThan, &out.DeleteAfterDaysSinceModificationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceCreationGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceCreationGreaterThan, &out.TierToArchiveAfterDaysSinceCreationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceLastAccessTimeGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceLastAccessTimeGreaterThan, &out.TierToArchiveAfterDaysSinceLastAccessTimeGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan, &out.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceModificationGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceModificationGreaterThan, &out.TierToArchiveAfterDaysSinceModificationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToCoolAfterDaysSinceCreationGreaterThan != nil {
		in, out := &in.TierToCoolAfterDaysSinceCreationGreaterThan, &out.TierToCoolAfterDaysSinceCreationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToCoolAfterDaysSinceLastAccessTimeGreaterThan != nil {
		in, out := &in.TierToCoolAfterDaysSinceLastAccessTimeGreaterThan, &out.TierToCoolAfterDaysSinceLastAccessTimeGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToCoolAfterDaysSinceModificationGreaterThan != nil {
		in, out := &in.TierToCoolAfterDaysSinceModificationGreaterThan, &out.TierToCoolAfterDaysSinceModificationGreaterThan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseBlobObservation.
func (in *BaseBlobObservation) DeepCopy() *BaseBlobObservation {
	if in == nil {
		return nil
	}
	out := new(BaseBlobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseBlobParameters) DeepCopyInto(out *BaseBlobParameters) {
	*out = *in
	if in.AutoTierToHotFromCoolEnabled != nil {
		in, out := &in.AutoTierToHotFromCoolEnabled, &out.AutoTierToHotFromCoolEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DeleteAfterDaysSinceCreationGreaterThan != nil {
		in, out := &in.DeleteAfterDaysSinceCreationGreaterThan, &out.DeleteAfterDaysSinceCreationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.DeleteAfterDaysSinceLastAccessTimeGreaterThan != nil {
		in, out := &in.DeleteAfterDaysSinceLastAccessTimeGreaterThan, &out.DeleteAfterDaysSinceLastAccessTimeGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.DeleteAfterDaysSinceModificationGreaterThan != nil {
		in, out := &in.DeleteAfterDaysSinceModificationGreaterThan, &out.DeleteAfterDaysSinceModificationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceCreationGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceCreationGreaterThan, &out.TierToArchiveAfterDaysSinceCreationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceLastAccessTimeGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceLastAccessTimeGreaterThan, &out.TierToArchiveAfterDaysSinceLastAccessTimeGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan, &out.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceModificationGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceModificationGreaterThan, &out.TierToArchiveAfterDaysSinceModificationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToCoolAfterDaysSinceCreationGreaterThan != nil {
		in, out := &in.TierToCoolAfterDaysSinceCreationGreaterThan, &out.TierToCoolAfterDaysSinceCreationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToCoolAfterDaysSinceLastAccessTimeGreaterThan != nil {
		in, out := &in.TierToCoolAfterDaysSinceLastAccessTimeGreaterThan, &out.TierToCoolAfterDaysSinceLastAccessTimeGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToCoolAfterDaysSinceModificationGreaterThan != nil {
		in, out := &in.TierToCoolAfterDaysSinceModificationGreaterThan, &out.TierToCoolAfterDaysSinceModificationGreaterThan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseBlobParameters.
func (in *BaseBlobParameters) DeepCopy() *BaseBlobParameters {
	if in == nil {
		return nil
	}
	out := new(BaseBlobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Blob) DeepCopyInto(out *Blob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Blob.
func (in *Blob) DeepCopy() *Blob {
	if in == nil {
		return nil
	}
	out := new(Blob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Blob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobList) DeepCopyInto(out *BlobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Blob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobList.
func (in *BlobList) DeepCopy() *BlobList {
	if in == nil {
		return nil
	}
	out := new(BlobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BlobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobObservation) DeepCopyInto(out *BlobObservation) {
	*out = *in
	if in.AccessTier != nil {
		in, out := &in.AccessTier, &out.AccessTier
		*out = new(string)
		**out = **in
	}
	if in.CacheControl != nil {
		in, out := &in.CacheControl, &out.CacheControl
		*out = new(string)
		**out = **in
	}
	if in.ContentMd5 != nil {
		in, out := &in.ContentMd5, &out.ContentMd5
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Parallelism != nil {
		in, out := &in.Parallelism, &out.Parallelism
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceContent != nil {
		in, out := &in.SourceContent, &out.SourceContent
		*out = new(string)
		**out = **in
	}
	if in.SourceURI != nil {
		in, out := &in.SourceURI, &out.SourceURI
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerName != nil {
		in, out := &in.StorageContainerName, &out.StorageContainerName
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobObservation.
func (in *BlobObservation) DeepCopy() *BlobObservation {
	if in == nil {
		return nil
	}
	out := new(BlobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobParameters) DeepCopyInto(out *BlobParameters) {
	*out = *in
	if in.AccessTier != nil {
		in, out := &in.AccessTier, &out.AccessTier
		*out = new(string)
		**out = **in
	}
	if in.CacheControl != nil {
		in, out := &in.CacheControl, &out.CacheControl
		*out = new(string)
		**out = **in
	}
	if in.ContentMd5 != nil {
		in, out := &in.ContentMd5, &out.ContentMd5
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Parallelism != nil {
		in, out := &in.Parallelism, &out.Parallelism
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceContent != nil {
		in, out := &in.SourceContent, &out.SourceContent
		*out = new(string)
		**out = **in
	}
	if in.SourceURI != nil {
		in, out := &in.SourceURI, &out.SourceURI
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageContainerName != nil {
		in, out := &in.StorageContainerName, &out.StorageContainerName
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerNameRef != nil {
		in, out := &in.StorageContainerNameRef, &out.StorageContainerNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageContainerNameSelector != nil {
		in, out := &in.StorageContainerNameSelector, &out.StorageContainerNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobParameters.
func (in *BlobParameters) DeepCopy() *BlobParameters {
	if in == nil {
		return nil
	}
	out := new(BlobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobPropertiesObservation) DeepCopyInto(out *BlobPropertiesObservation) {
	*out = *in
	if in.ChangeFeedEnabled != nil {
		in, out := &in.ChangeFeedEnabled, &out.ChangeFeedEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ChangeFeedRetentionInDays != nil {
		in, out := &in.ChangeFeedRetentionInDays, &out.ChangeFeedRetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.ContainerDeleteRetentionPolicy != nil {
		in, out := &in.ContainerDeleteRetentionPolicy, &out.ContainerDeleteRetentionPolicy
		*out = make([]ContainerDeleteRetentionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = make([]CorsRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultServiceVersion != nil {
		in, out := &in.DefaultServiceVersion, &out.DefaultServiceVersion
		*out = new(string)
		**out = **in
	}
	if in.DeleteRetentionPolicy != nil {
		in, out := &in.DeleteRetentionPolicy, &out.DeleteRetentionPolicy
		*out = make([]DeleteRetentionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastAccessTimeEnabled != nil {
		in, out := &in.LastAccessTimeEnabled, &out.LastAccessTimeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RestorePolicy != nil {
		in, out := &in.RestorePolicy, &out.RestorePolicy
		*out = make([]RestorePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VersioningEnabled != nil {
		in, out := &in.VersioningEnabled, &out.VersioningEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobPropertiesObservation.
func (in *BlobPropertiesObservation) DeepCopy() *BlobPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(BlobPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobPropertiesParameters) DeepCopyInto(out *BlobPropertiesParameters) {
	*out = *in
	if in.ChangeFeedEnabled != nil {
		in, out := &in.ChangeFeedEnabled, &out.ChangeFeedEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ChangeFeedRetentionInDays != nil {
		in, out := &in.ChangeFeedRetentionInDays, &out.ChangeFeedRetentionInDays
		*out = new(float64)
		**out = **in
	}
	if in.ContainerDeleteRetentionPolicy != nil {
		in, out := &in.ContainerDeleteRetentionPolicy, &out.ContainerDeleteRetentionPolicy
		*out = make([]ContainerDeleteRetentionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = make([]CorsRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultServiceVersion != nil {
		in, out := &in.DefaultServiceVersion, &out.DefaultServiceVersion
		*out = new(string)
		**out = **in
	}
	if in.DeleteRetentionPolicy != nil {
		in, out := &in.DeleteRetentionPolicy, &out.DeleteRetentionPolicy
		*out = make([]DeleteRetentionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastAccessTimeEnabled != nil {
		in, out := &in.LastAccessTimeEnabled, &out.LastAccessTimeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RestorePolicy != nil {
		in, out := &in.RestorePolicy, &out.RestorePolicy
		*out = make([]RestorePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VersioningEnabled != nil {
		in, out := &in.VersioningEnabled, &out.VersioningEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobPropertiesParameters.
func (in *BlobPropertiesParameters) DeepCopy() *BlobPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(BlobPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobSpec) DeepCopyInto(out *BlobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobSpec.
func (in *BlobSpec) DeepCopy() *BlobSpec {
	if in == nil {
		return nil
	}
	out := new(BlobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlobStatus) DeepCopyInto(out *BlobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlobStatus.
func (in *BlobStatus) DeepCopy() *BlobStatus {
	if in == nil {
		return nil
	}
	out := new(BlobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Container) DeepCopyInto(out *Container) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Container.
func (in *Container) DeepCopy() *Container {
	if in == nil {
		return nil
	}
	out := new(Container)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Container) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerDeleteRetentionPolicyObservation) DeepCopyInto(out *ContainerDeleteRetentionPolicyObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerDeleteRetentionPolicyObservation.
func (in *ContainerDeleteRetentionPolicyObservation) DeepCopy() *ContainerDeleteRetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ContainerDeleteRetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerDeleteRetentionPolicyParameters) DeepCopyInto(out *ContainerDeleteRetentionPolicyParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerDeleteRetentionPolicyParameters.
func (in *ContainerDeleteRetentionPolicyParameters) DeepCopy() *ContainerDeleteRetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerDeleteRetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerList) DeepCopyInto(out *ContainerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerList.
func (in *ContainerList) DeepCopy() *ContainerList {
	if in == nil {
		return nil
	}
	out := new(ContainerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ContainerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerObservation) DeepCopyInto(out *ContainerObservation) {
	*out = *in
	if in.ContainerAccessType != nil {
		in, out := &in.ContainerAccessType, &out.ContainerAccessType
		*out = new(string)
		**out = **in
	}
	if in.HasImmutabilityPolicy != nil {
		in, out := &in.HasImmutabilityPolicy, &out.HasImmutabilityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.HasLegalHold != nil {
		in, out := &in.HasLegalHold, &out.HasLegalHold
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceManagerID != nil {
		in, out := &in.ResourceManagerID, &out.ResourceManagerID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerObservation.
func (in *ContainerObservation) DeepCopy() *ContainerObservation {
	if in == nil {
		return nil
	}
	out := new(ContainerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerParameters) DeepCopyInto(out *ContainerParameters) {
	*out = *in
	if in.ContainerAccessType != nil {
		in, out := &in.ContainerAccessType, &out.ContainerAccessType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StorageAccountName != nil {
		in, out := &in.StorageAccountName, &out.StorageAccountName
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountNameRef != nil {
		in, out := &in.StorageAccountNameRef, &out.StorageAccountNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountNameSelector != nil {
		in, out := &in.StorageAccountNameSelector, &out.StorageAccountNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerParameters.
func (in *ContainerParameters) DeepCopy() *ContainerParameters {
	if in == nil {
		return nil
	}
	out := new(ContainerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerSpec) DeepCopyInto(out *ContainerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerSpec.
func (in *ContainerSpec) DeepCopy() *ContainerSpec {
	if in == nil {
		return nil
	}
	out := new(ContainerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStatus) DeepCopyInto(out *ContainerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStatus.
func (in *ContainerStatus) DeepCopy() *ContainerStatus {
	if in == nil {
		return nil
	}
	out := new(ContainerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRuleObservation) DeepCopyInto(out *CorsRuleObservation) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRuleObservation.
func (in *CorsRuleObservation) DeepCopy() *CorsRuleObservation {
	if in == nil {
		return nil
	}
	out := new(CorsRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsRuleParameters) DeepCopyInto(out *CorsRuleParameters) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsRuleParameters.
func (in *CorsRuleParameters) DeepCopy() *CorsRuleParameters {
	if in == nil {
		return nil
	}
	out := new(CorsRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomainObservation) DeepCopyInto(out *CustomDomainObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UseSubdomain != nil {
		in, out := &in.UseSubdomain, &out.UseSubdomain
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomainObservation.
func (in *CustomDomainObservation) DeepCopy() *CustomDomainObservation {
	if in == nil {
		return nil
	}
	out := new(CustomDomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomainParameters) DeepCopyInto(out *CustomDomainParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UseSubdomain != nil {
		in, out := &in.UseSubdomain, &out.UseSubdomain
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomainParameters.
func (in *CustomDomainParameters) DeepCopy() *CustomDomainParameters {
	if in == nil {
		return nil
	}
	out := new(CustomDomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerManagedKeyObservation) DeepCopyInto(out *CustomerManagedKeyObservation) {
	*out = *in
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentityID != nil {
		in, out := &in.UserAssignedIdentityID, &out.UserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerManagedKeyObservation.
func (in *CustomerManagedKeyObservation) DeepCopy() *CustomerManagedKeyObservation {
	if in == nil {
		return nil
	}
	out := new(CustomerManagedKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomerManagedKeyParameters) DeepCopyInto(out *CustomerManagedKeyParameters) {
	*out = *in
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentityID != nil {
		in, out := &in.UserAssignedIdentityID, &out.UserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomerManagedKeyParameters.
func (in *CustomerManagedKeyParameters) DeepCopy() *CustomerManagedKeyParameters {
	if in == nil {
		return nil
	}
	out := new(CustomerManagedKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteRetentionPolicyObservation) DeepCopyInto(out *DeleteRetentionPolicyObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteRetentionPolicyObservation.
func (in *DeleteRetentionPolicyObservation) DeepCopy() *DeleteRetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DeleteRetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteRetentionPolicyParameters) DeepCopyInto(out *DeleteRetentionPolicyParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteRetentionPolicyParameters.
func (in *DeleteRetentionPolicyParameters) DeepCopy() *DeleteRetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DeleteRetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersObservation) DeepCopyInto(out *FiltersObservation) {
	*out = *in
	if in.BlobTypes != nil {
		in, out := &in.BlobTypes, &out.BlobTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchBlobIndexTag != nil {
		in, out := &in.MatchBlobIndexTag, &out.MatchBlobIndexTag
		*out = make([]MatchBlobIndexTagObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersObservation.
func (in *FiltersObservation) DeepCopy() *FiltersObservation {
	if in == nil {
		return nil
	}
	out := new(FiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersParameters) DeepCopyInto(out *FiltersParameters) {
	*out = *in
	if in.BlobTypes != nil {
		in, out := &in.BlobTypes, &out.BlobTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchBlobIndexTag != nil {
		in, out := &in.MatchBlobIndexTag, &out.MatchBlobIndexTag
		*out = make([]MatchBlobIndexTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersParameters.
func (in *FiltersParameters) DeepCopy() *FiltersParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourMetricsObservation) DeepCopyInto(out *HourMetricsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IncludeApis != nil {
		in, out := &in.IncludeApis, &out.IncludeApis
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicyDays != nil {
		in, out := &in.RetentionPolicyDays, &out.RetentionPolicyDays
		*out = new(float64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourMetricsObservation.
func (in *HourMetricsObservation) DeepCopy() *HourMetricsObservation {
	if in == nil {
		return nil
	}
	out := new(HourMetricsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourMetricsParameters) DeepCopyInto(out *HourMetricsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IncludeApis != nil {
		in, out := &in.IncludeApis, &out.IncludeApis
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicyDays != nil {
		in, out := &in.RetentionPolicyDays, &out.RetentionPolicyDays
		*out = new(float64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourMetricsParameters.
func (in *HourMetricsParameters) DeepCopy() *HourMetricsParameters {
	if in == nil {
		return nil
	}
	out := new(HourMetricsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImmutabilityPolicyObservation) DeepCopyInto(out *ImmutabilityPolicyObservation) {
	*out = *in
	if in.AllowProtectedAppendWrites != nil {
		in, out := &in.AllowProtectedAppendWrites, &out.AllowProtectedAppendWrites
		*out = new(bool)
		**out = **in
	}
	if in.PeriodSinceCreationInDays != nil {
		in, out := &in.PeriodSinceCreationInDays, &out.PeriodSinceCreationInDays
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImmutabilityPolicyObservation.
func (in *ImmutabilityPolicyObservation) DeepCopy() *ImmutabilityPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ImmutabilityPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImmutabilityPolicyParameters) DeepCopyInto(out *ImmutabilityPolicyParameters) {
	*out = *in
	if in.AllowProtectedAppendWrites != nil {
		in, out := &in.AllowProtectedAppendWrites, &out.AllowProtectedAppendWrites
		*out = new(bool)
		**out = **in
	}
	if in.PeriodSinceCreationInDays != nil {
		in, out := &in.PeriodSinceCreationInDays, &out.PeriodSinceCreationInDays
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImmutabilityPolicyParameters.
func (in *ImmutabilityPolicyParameters) DeepCopy() *ImmutabilityPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ImmutabilityPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingObservation) DeepCopyInto(out *LoggingObservation) {
	*out = *in
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = new(bool)
		**out = **in
	}
	if in.Read != nil {
		in, out := &in.Read, &out.Read
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicyDays != nil {
		in, out := &in.RetentionPolicyDays, &out.RetentionPolicyDays
		*out = new(float64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Write != nil {
		in, out := &in.Write, &out.Write
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingObservation.
func (in *LoggingObservation) DeepCopy() *LoggingObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingParameters) DeepCopyInto(out *LoggingParameters) {
	*out = *in
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = new(bool)
		**out = **in
	}
	if in.Read != nil {
		in, out := &in.Read, &out.Read
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicyDays != nil {
		in, out := &in.RetentionPolicyDays, &out.RetentionPolicyDays
		*out = new(float64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Write != nil {
		in, out := &in.Write, &out.Write
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingParameters.
func (in *LoggingParameters) DeepCopy() *LoggingParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementPolicy) DeepCopyInto(out *ManagementPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementPolicy.
func (in *ManagementPolicy) DeepCopy() *ManagementPolicy {
	if in == nil {
		return nil
	}
	out := new(ManagementPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementPolicyList) DeepCopyInto(out *ManagementPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagementPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementPolicyList.
func (in *ManagementPolicyList) DeepCopy() *ManagementPolicyList {
	if in == nil {
		return nil
	}
	out := new(ManagementPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementPolicyObservation) DeepCopyInto(out *ManagementPolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementPolicyObservation.
func (in *ManagementPolicyObservation) DeepCopy() *ManagementPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ManagementPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementPolicyParameters) DeepCopyInto(out *ManagementPolicyParameters) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountID != nil {
		in, out := &in.StorageAccountID, &out.StorageAccountID
		*out = new(string)
		**out = **in
	}
	if in.StorageAccountIDRef != nil {
		in, out := &in.StorageAccountIDRef, &out.StorageAccountIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageAccountIDSelector != nil {
		in, out := &in.StorageAccountIDSelector, &out.StorageAccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementPolicyParameters.
func (in *ManagementPolicyParameters) DeepCopy() *ManagementPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ManagementPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementPolicySpec) DeepCopyInto(out *ManagementPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementPolicySpec.
func (in *ManagementPolicySpec) DeepCopy() *ManagementPolicySpec {
	if in == nil {
		return nil
	}
	out := new(ManagementPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementPolicyStatus) DeepCopyInto(out *ManagementPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementPolicyStatus.
func (in *ManagementPolicyStatus) DeepCopy() *ManagementPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchBlobIndexTagObservation) DeepCopyInto(out *MatchBlobIndexTagObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchBlobIndexTagObservation.
func (in *MatchBlobIndexTagObservation) DeepCopy() *MatchBlobIndexTagObservation {
	if in == nil {
		return nil
	}
	out := new(MatchBlobIndexTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchBlobIndexTagParameters) DeepCopyInto(out *MatchBlobIndexTagParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchBlobIndexTagParameters.
func (in *MatchBlobIndexTagParameters) DeepCopy() *MatchBlobIndexTagParameters {
	if in == nil {
		return nil
	}
	out := new(MatchBlobIndexTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MinuteMetricsObservation) DeepCopyInto(out *MinuteMetricsObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IncludeApis != nil {
		in, out := &in.IncludeApis, &out.IncludeApis
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicyDays != nil {
		in, out := &in.RetentionPolicyDays, &out.RetentionPolicyDays
		*out = new(float64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MinuteMetricsObservation.
func (in *MinuteMetricsObservation) DeepCopy() *MinuteMetricsObservation {
	if in == nil {
		return nil
	}
	out := new(MinuteMetricsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MinuteMetricsParameters) DeepCopyInto(out *MinuteMetricsParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IncludeApis != nil {
		in, out := &in.IncludeApis, &out.IncludeApis
		*out = new(bool)
		**out = **in
	}
	if in.RetentionPolicyDays != nil {
		in, out := &in.RetentionPolicyDays, &out.RetentionPolicyDays
		*out = new(float64)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MinuteMetricsParameters.
func (in *MinuteMetricsParameters) DeepCopy() *MinuteMetricsParameters {
	if in == nil {
		return nil
	}
	out := new(MinuteMetricsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRulesObservation) DeepCopyInto(out *NetworkRulesObservation) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IPRules != nil {
		in, out := &in.IPRules, &out.IPRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateLinkAccess != nil {
		in, out := &in.PrivateLinkAccess, &out.PrivateLinkAccess
		*out = make([]PrivateLinkAccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualNetworkSubnetIds != nil {
		in, out := &in.VirtualNetworkSubnetIds, &out.VirtualNetworkSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRulesObservation.
func (in *NetworkRulesObservation) DeepCopy() *NetworkRulesObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRulesParameters) DeepCopyInto(out *NetworkRulesParameters) {
	*out = *in
	if in.Bypass != nil {
		in, out := &in.Bypass, &out.Bypass
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.IPRules != nil {
		in, out := &in.IPRules, &out.IPRules
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateLinkAccess != nil {
		in, out := &in.PrivateLinkAccess, &out.PrivateLinkAccess
		*out = make([]PrivateLinkAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualNetworkSubnetIds != nil {
		in, out := &in.VirtualNetworkSubnetIds, &out.VirtualNetworkSubnetIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRulesParameters.
func (in *NetworkRulesParameters) DeepCopy() *NetworkRulesParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkAccessObservation) DeepCopyInto(out *PrivateLinkAccessObservation) {
	*out = *in
	if in.EndpointResourceID != nil {
		in, out := &in.EndpointResourceID, &out.EndpointResourceID
		*out = new(string)
		**out = **in
	}
	if in.EndpointTenantID != nil {
		in, out := &in.EndpointTenantID, &out.EndpointTenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkAccessObservation.
func (in *PrivateLinkAccessObservation) DeepCopy() *PrivateLinkAccessObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLinkAccessParameters) DeepCopyInto(out *PrivateLinkAccessParameters) {
	*out = *in
	if in.EndpointResourceID != nil {
		in, out := &in.EndpointResourceID, &out.EndpointResourceID
		*out = new(string)
		**out = **in
	}
	if in.EndpointTenantID != nil {
		in, out := &in.EndpointTenantID, &out.EndpointTenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLinkAccessParameters.
func (in *PrivateLinkAccessParameters) DeepCopy() *PrivateLinkAccessParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateLinkAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueuePropertiesCorsRuleObservation) DeepCopyInto(out *QueuePropertiesCorsRuleObservation) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueuePropertiesCorsRuleObservation.
func (in *QueuePropertiesCorsRuleObservation) DeepCopy() *QueuePropertiesCorsRuleObservation {
	if in == nil {
		return nil
	}
	out := new(QueuePropertiesCorsRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueuePropertiesCorsRuleParameters) DeepCopyInto(out *QueuePropertiesCorsRuleParameters) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueuePropertiesCorsRuleParameters.
func (in *QueuePropertiesCorsRuleParameters) DeepCopy() *QueuePropertiesCorsRuleParameters {
	if in == nil {
		return nil
	}
	out := new(QueuePropertiesCorsRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueuePropertiesObservation) DeepCopyInto(out *QueuePropertiesObservation) {
	*out = *in
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = make([]QueuePropertiesCorsRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HourMetrics != nil {
		in, out := &in.HourMetrics, &out.HourMetrics
		*out = make([]HourMetricsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinuteMetrics != nil {
		in, out := &in.MinuteMetrics, &out.MinuteMetrics
		*out = make([]MinuteMetricsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueuePropertiesObservation.
func (in *QueuePropertiesObservation) DeepCopy() *QueuePropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(QueuePropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueuePropertiesParameters) DeepCopyInto(out *QueuePropertiesParameters) {
	*out = *in
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = make([]QueuePropertiesCorsRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HourMetrics != nil {
		in, out := &in.HourMetrics, &out.HourMetrics
		*out = make([]HourMetricsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = make([]LoggingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinuteMetrics != nil {
		in, out := &in.MinuteMetrics, &out.MinuteMetrics
		*out = make([]MinuteMetricsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueuePropertiesParameters.
func (in *QueuePropertiesParameters) DeepCopy() *QueuePropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(QueuePropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestorePolicyObservation) DeepCopyInto(out *RestorePolicyObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestorePolicyObservation.
func (in *RestorePolicyObservation) DeepCopy() *RestorePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RestorePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestorePolicyParameters) DeepCopyInto(out *RestorePolicyParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestorePolicyParameters.
func (in *RestorePolicyParameters) DeepCopy() *RestorePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RestorePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyObservation) DeepCopyInto(out *RetentionPolicyObservation) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyObservation.
func (in *RetentionPolicyObservation) DeepCopy() *RetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyParameters) DeepCopyInto(out *RetentionPolicyParameters) {
	*out = *in
	if in.Days != nil {
		in, out := &in.Days, &out.Days
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyParameters.
func (in *RetentionPolicyParameters) DeepCopy() *RetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingObservation) DeepCopyInto(out *RoutingObservation) {
	*out = *in
	if in.Choice != nil {
		in, out := &in.Choice, &out.Choice
		*out = new(string)
		**out = **in
	}
	if in.PublishInternetEndpoints != nil {
		in, out := &in.PublishInternetEndpoints, &out.PublishInternetEndpoints
		*out = new(bool)
		**out = **in
	}
	if in.PublishMicrosoftEndpoints != nil {
		in, out := &in.PublishMicrosoftEndpoints, &out.PublishMicrosoftEndpoints
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingObservation.
func (in *RoutingObservation) DeepCopy() *RoutingObservation {
	if in == nil {
		return nil
	}
	out := new(RoutingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutingParameters) DeepCopyInto(out *RoutingParameters) {
	*out = *in
	if in.Choice != nil {
		in, out := &in.Choice, &out.Choice
		*out = new(string)
		**out = **in
	}
	if in.PublishInternetEndpoints != nil {
		in, out := &in.PublishInternetEndpoints, &out.PublishInternetEndpoints
		*out = new(bool)
		**out = **in
	}
	if in.PublishMicrosoftEndpoints != nil {
		in, out := &in.PublishMicrosoftEndpoints, &out.PublishMicrosoftEndpoints
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutingParameters.
func (in *RoutingParameters) DeepCopy() *RoutingParameters {
	if in == nil {
		return nil
	}
	out := new(RoutingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]ActionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]ActionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SASPolicyObservation) DeepCopyInto(out *SASPolicyObservation) {
	*out = *in
	if in.ExpirationAction != nil {
		in, out := &in.ExpirationAction, &out.ExpirationAction
		*out = new(string)
		**out = **in
	}
	if in.ExpirationPeriod != nil {
		in, out := &in.ExpirationPeriod, &out.ExpirationPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SASPolicyObservation.
func (in *SASPolicyObservation) DeepCopy() *SASPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SASPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SASPolicyParameters) DeepCopyInto(out *SASPolicyParameters) {
	*out = *in
	if in.ExpirationAction != nil {
		in, out := &in.ExpirationAction, &out.ExpirationAction
		*out = new(string)
		**out = **in
	}
	if in.ExpirationPeriod != nil {
		in, out := &in.ExpirationPeriod, &out.ExpirationPeriod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SASPolicyParameters.
func (in *SASPolicyParameters) DeepCopy() *SASPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SASPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SMBObservation) DeepCopyInto(out *SMBObservation) {
	*out = *in
	if in.AuthenticationTypes != nil {
		in, out := &in.AuthenticationTypes, &out.AuthenticationTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ChannelEncryptionType != nil {
		in, out := &in.ChannelEncryptionType, &out.ChannelEncryptionType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KerberosTicketEncryptionType != nil {
		in, out := &in.KerberosTicketEncryptionType, &out.KerberosTicketEncryptionType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MultichannelEnabled != nil {
		in, out := &in.MultichannelEnabled, &out.MultichannelEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SMBObservation.
func (in *SMBObservation) DeepCopy() *SMBObservation {
	if in == nil {
		return nil
	}
	out := new(SMBObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SMBParameters) DeepCopyInto(out *SMBParameters) {
	*out = *in
	if in.AuthenticationTypes != nil {
		in, out := &in.AuthenticationTypes, &out.AuthenticationTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ChannelEncryptionType != nil {
		in, out := &in.ChannelEncryptionType, &out.ChannelEncryptionType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KerberosTicketEncryptionType != nil {
		in, out := &in.KerberosTicketEncryptionType, &out.KerberosTicketEncryptionType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MultichannelEnabled != nil {
		in, out := &in.MultichannelEnabled, &out.MultichannelEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SMBParameters.
func (in *SMBParameters) DeepCopy() *SMBParameters {
	if in == nil {
		return nil
	}
	out := new(SMBParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePropertiesCorsRuleObservation) DeepCopyInto(out *SharePropertiesCorsRuleObservation) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePropertiesCorsRuleObservation.
func (in *SharePropertiesCorsRuleObservation) DeepCopy() *SharePropertiesCorsRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SharePropertiesCorsRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePropertiesCorsRuleParameters) DeepCopyInto(out *SharePropertiesCorsRuleParameters) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePropertiesCorsRuleParameters.
func (in *SharePropertiesCorsRuleParameters) DeepCopy() *SharePropertiesCorsRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SharePropertiesCorsRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePropertiesObservation) DeepCopyInto(out *SharePropertiesObservation) {
	*out = *in
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = make([]SharePropertiesCorsRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SMB != nil {
		in, out := &in.SMB, &out.SMB
		*out = make([]SMBObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePropertiesObservation.
func (in *SharePropertiesObservation) DeepCopy() *SharePropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(SharePropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharePropertiesParameters) DeepCopyInto(out *SharePropertiesParameters) {
	*out = *in
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = make([]SharePropertiesCorsRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SMB != nil {
		in, out := &in.SMB, &out.SMB
		*out = make([]SMBParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharePropertiesParameters.
func (in *SharePropertiesParameters) DeepCopy() *SharePropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(SharePropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotObservation) DeepCopyInto(out *SnapshotObservation) {
	*out = *in
	if in.ChangeTierToArchiveAfterDaysSinceCreation != nil {
		in, out := &in.ChangeTierToArchiveAfterDaysSinceCreation, &out.ChangeTierToArchiveAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.ChangeTierToCoolAfterDaysSinceCreation != nil {
		in, out := &in.ChangeTierToCoolAfterDaysSinceCreation, &out.ChangeTierToCoolAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.DeleteAfterDaysSinceCreationGreaterThan != nil {
		in, out := &in.DeleteAfterDaysSinceCreationGreaterThan, &out.DeleteAfterDaysSinceCreationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan, &out.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotObservation.
func (in *SnapshotObservation) DeepCopy() *SnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotParameters) DeepCopyInto(out *SnapshotParameters) {
	*out = *in
	if in.ChangeTierToArchiveAfterDaysSinceCreation != nil {
		in, out := &in.ChangeTierToArchiveAfterDaysSinceCreation, &out.ChangeTierToArchiveAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.ChangeTierToCoolAfterDaysSinceCreation != nil {
		in, out := &in.ChangeTierToCoolAfterDaysSinceCreation, &out.ChangeTierToCoolAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.DeleteAfterDaysSinceCreationGreaterThan != nil {
		in, out := &in.DeleteAfterDaysSinceCreationGreaterThan, &out.DeleteAfterDaysSinceCreationGreaterThan
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan, &out.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotParameters.
func (in *SnapshotParameters) DeepCopy() *SnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebsiteObservation) DeepCopyInto(out *StaticWebsiteObservation) {
	*out = *in
	if in.Error404Document != nil {
		in, out := &in.Error404Document, &out.Error404Document
		*out = new(string)
		**out = **in
	}
	if in.IndexDocument != nil {
		in, out := &in.IndexDocument, &out.IndexDocument
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebsiteObservation.
func (in *StaticWebsiteObservation) DeepCopy() *StaticWebsiteObservation {
	if in == nil {
		return nil
	}
	out := new(StaticWebsiteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticWebsiteParameters) DeepCopyInto(out *StaticWebsiteParameters) {
	*out = *in
	if in.Error404Document != nil {
		in, out := &in.Error404Document, &out.Error404Document
		*out = new(string)
		**out = **in
	}
	if in.IndexDocument != nil {
		in, out := &in.IndexDocument, &out.IndexDocument
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticWebsiteParameters.
func (in *StaticWebsiteParameters) DeepCopy() *StaticWebsiteParameters {
	if in == nil {
		return nil
	}
	out := new(StaticWebsiteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionObservation) DeepCopyInto(out *VersionObservation) {
	*out = *in
	if in.ChangeTierToArchiveAfterDaysSinceCreation != nil {
		in, out := &in.ChangeTierToArchiveAfterDaysSinceCreation, &out.ChangeTierToArchiveAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.ChangeTierToCoolAfterDaysSinceCreation != nil {
		in, out := &in.ChangeTierToCoolAfterDaysSinceCreation, &out.ChangeTierToCoolAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.DeleteAfterDaysSinceCreation != nil {
		in, out := &in.DeleteAfterDaysSinceCreation, &out.DeleteAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan, &out.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionObservation.
func (in *VersionObservation) DeepCopy() *VersionObservation {
	if in == nil {
		return nil
	}
	out := new(VersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionParameters) DeepCopyInto(out *VersionParameters) {
	*out = *in
	if in.ChangeTierToArchiveAfterDaysSinceCreation != nil {
		in, out := &in.ChangeTierToArchiveAfterDaysSinceCreation, &out.ChangeTierToArchiveAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.ChangeTierToCoolAfterDaysSinceCreation != nil {
		in, out := &in.ChangeTierToCoolAfterDaysSinceCreation, &out.ChangeTierToCoolAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.DeleteAfterDaysSinceCreation != nil {
		in, out := &in.DeleteAfterDaysSinceCreation, &out.DeleteAfterDaysSinceCreation
		*out = new(float64)
		**out = **in
	}
	if in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan != nil {
		in, out := &in.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan, &out.TierToArchiveAfterDaysSinceLastTierChangeGreaterThan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionParameters.
func (in *VersionParameters) DeepCopy() *VersionParameters {
	if in == nil {
		return nil
	}
	out := new(VersionParameters)
	in.DeepCopyInto(out)
	return out
}
